[gd_scene load_steps=6 format=2]

[ext_resource path="res://assets/models/bonuses/bonus_base_armor.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=4]
script/source = "extends CBonus

# время таймера
var timer: float = 30;

# узел готов
func _ready():
	# сохраняем тип бонуса
	set_type(_BASE_ARMOR);
	
	# регаем действие \"Броня для базы\"
	actions.set_action(CActionsBonusBaseArmor.new(\"base_armor\"));
	
# активация бонуса
func activate() -> void:
	# родитель
	.activate();
	
	# получаем такой же активный бонус
	var _bonus = _get_similar_bonus(false);
	
	# если бонуса НЕТ
	if null == _bonus:
		# стартуем действие
		actions.set_current_action(\"base_armor\", _delta);
		
	# если бонус есть
	elif _bonus.actions.has_current_action():
		# обновляем таймер
		_bonus.actions.get_current_action().start_timer(timer);
		# деактивируем бонус
		deactivate();

# скрыть красную стену
func hide_red_wall() -> void:
	# скрываем пробиваемую стену вокруг базы
	CApp.get_scene().get_node(\"Map/Base/Unarmored\").visible = false;
	# у блоков стены
	for _wall in CApp.get_scene().get_node(\"Map/Base/Unarmored\").get_children():
		# отключаем колизию
		_wall.set_collision_layer_bit(0, false);

# отобразить красную стену
func show_red_wall() -> void:
	# отображаем пробиваемую стену вокруг базы
	CApp.get_scene().get_node(\"Map/Base/Unarmored\").visible = true;
	# у блоков стены
	for _wall in CApp.get_scene().get_node(\"Map/Base/Unarmored\").get_children():
		# включаем колизию
		_wall.set_collision_layer_bit(0, true);

# скрыть белую стену
func hide_white_wall() -> void:
	# скрываем не пробиваемую стену вокруг базы
	CApp.get_scene().get_node(\"Map/Base/Armored\").visible = false;
	# у блоков стены
	for _wall in CApp.get_scene().get_node(\"Map/Base/Armored\").get_children():
		# отключаем колизию
		_wall.set_collision_layer_bit(0, false);

# отобразить белую стену
func show_white_wall() -> void:
	# отображаем не пробиваемую стену вокруг базы
	CApp.get_scene().get_node(\"Map/Base/Armored\").visible = true;
	# у блоков стены
	for _wall in CApp.get_scene().get_node(\"Map/Base/Armored\").get_children():
		# активируем колизию
		_wall.set_collision_layer_bit(0, true);

# шарим активацию бонуса
func share_activate() -> void:
	# прячем красную стену
	hide_red_wall();
	# отображаем белую стену
	show_white_wall();

# шарим деактивацию бонуса
func share_deactivate() -> void:
	# прячем белую стену
	hide_white_wall();
	# отображаем красную стену
	show_red_wall();

"

[sub_resource type="BoxShape" id=1]

[sub_resource type="Animation" id=2]
length = 0.001
tracks/0/type = "value"
tracks/0/path = NodePath("bonus_base_armor:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "idle"
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("bonus_base_armor:translation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector3( 0, 0, 0 ), Vector3( 0, 1.5, 0 ), Vector3( 0, 0, 0 ) ]
}

[node name="Base_Armor" type="Area"]
collision_layer = 512
collision_mask = 0
script = SubResource( 4 )

[node name="bonus_base_armor" parent="." instance=ExtResource( 1 )]

[node name="CollisionShape" type="CollisionShape" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0 )
shape = SubResource( 1 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "idle"
anims/RESET = SubResource( 2 )
anims/idle = SubResource( 3 )
